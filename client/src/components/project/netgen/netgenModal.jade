.modal-header
	.row.vert-align
		.col-xs-6
			h6
				span Link nodes by {{titleStringSuffix()}}
		.col-xs-6.vert-align.right
			button.header-btn(ng-if="modalState == 'diCreate'", type="button", ng-click="openMergeModal();" ng-disabled="ngUi.netGenRunning") 
				i.fa.fa-plus
				span.h7 Enrich Data
			button.header-btn(ng-class="{'hide': !isAnySelected()}" ng-disabled="ngUi.netGenRunning" type="button", ng-click="generateNetwork();" uib-tooltip="Generate Network" tooltip-placement="left") 
				span.h7(ng-show="!regenerateNetwork") Start
				span.h7(ng-show="regenerateNetwork") Recalculate
			button.close-btn(type="button", ng-click="closeModal()")
				span.icon &times;
form.modal-body.noselect(name="nodeAttrForm")
	.container-fluid
		.row(ng-if="nodeAttributes")
			.col-xs-12
				.row
					.div(ng-if="regenAfterMerge")
						.col-xs-3
						.col-xs-9
							span.bg-warning Some parent attributes for the network have changed during the merge. The links need recalculation.
					.list-wrapper.max-height.nowrap
						.summary-btn.vert-align(ng-click="paramsOpen = !paramsOpen")
							i.fa.fa-ellipsis-h
						.list.animate(ng-class="{'col-xs-8': paramsOpen, 'col-xs-12': !paramsOpen}")
							.row.title-style.vert-align
								.col-xs-1
									//- a.select-btn.btn-icon-round.btn-icon-round-sm.btn-line-default(uib-tooltip="{{ {true:'ex', false: 'in'}[checkAll]+ 'clude all'}}", ng-click="toggleSelection()" tooltip-placement="right" ng-class="{true:'active', false: ''}[checkAll]")
									//- 	i.fa(ng-class = "{true:'fa-check', false:'fa-check white'}[checkAll]")
									.tag-checkbox
										input(id="checkbox-all" type="checkbox", ng-model="checkAll", ng-change="toggleSelection();")
										label(for="checkbox-all")
								.col-xs-5
									h4 Attribute Name
								//h5.col-xs-2.text-primary Render As
								.col-xs-5.pull-left
									h4(ng-if="isAnySelected()")  Analyze As
								//- .col-xs-2.pull-right(style="cursor:pointer;", ng-click="paramsOpen = true;") ...Params
							.clearfix
							.row.border-section.title-style.vert-align(ng-repeat="attribute in nodeAttributes", ng-click="handleClickOnRow($index, $event)", style="cursor:pointer;")
								.col-xs-1
									//- a.select-btn.btn-icon-round.btn-icon-round-sm.btn-line-default(ng-click="handleClickOnRow($index, $event);$event.stopPropagation();" ng-class="{true:'active', false: ''}[attribute.isChecked]")
									//- 	i.fa(ng-class = "{true:'fa-check', false:'fa-check white'}[attribute.isChecked]")
									.tag-checkbox
										input(id="checkbox-{{$index}}" type="checkbox", ng-model="attribute.isChecked", ng-change="uncheckSelectAll()")
										label(for="checkbox-{{$index}}")
								.col-xs-5
									h5 {{attribute.titleShort}}&nbsp;
									h6.count ({{::attribute.valuesCount}} values)
								//.col-xs-2
									.ui-select
										select(ng-model="attribute.attrType", ng-options="ndAttrType for ndAttrType in nodeAttrTypes")
								.col-xs-2(ng-if='attribute.isChecked')
									.ui-select
										select(uib-tooltip="numerical or categorical?", tooltip-placement="left", ng-model="attribute.valType", ng-options="vt for vt in valType", ng-click="$event.stopPropagation();")
								.col-xs-2(ng-if="attribute.isChecked && attribute.valType == 'Number'")
									.ui-select
										select(uib-tooltip="Are values feature weights", tooltip-placement="left", ng-model="attribute.isWtdFeature", ng-options="or for or in isWtdFeature", ng-click="$event.stopPropagation();")
								//- .col-xs-2(ng-if="attribute.isChecked && attribute.valType == 'Category'")
								//- 	.ui-select
								//- 		select(uib-tooltip="Are values ordered? eg. good, better, best, ..", tooltip-placement="left", ng-model="attribute.isOrdered", ng-options="or for or in isOrdered", ng-click="$event.stopPropagation();")
								.col-xs-2(ng-if="attribute.isChecked && attribute.valType == 'Category'")
									.ui-select
										select(uib-tooltip="Do values contain multiple tags?", tooltip-placement="left", ng-model="attribute.isMulti", ng-options="mt for mt in isMulti", ng-click="$event.stopPropagation();")
									//input.col-xs-1(ng-if="attribute.valType == 'Category'", type="checkbox", uib-tooltip="ORDERED: if values have a sequence eg. good, better, best, ..", tooltip-placement="left", style="margin-left: 20px;", ng-model="attribute.isOrdered")
									//input.col-xs-1(ng-if="attribute.valType == 'Category'", type="checkbox", uib-tooltip="MULTI: if values contains multiple tags.", tooltip-placement="left", style="margin-left: 10px;", ng-model="attribute.isMulti")

						.col-xs-4.meta-list.animate-to-left(ng-if="paramsOpen")
							h4.nowrap Options
							//- .row.border-section.title-style
							//- 	.col-xs-6
							//- 		.text-small Switch to new network when done
							//- 	.col-xs-6
							//- 		.bool(ng-if="!linkedToDI && !regenerateNetwork")
							//- 			.onoffswitch
							//- 				input.onoffswitch-checkbox(id='switchToNew', type='checkbox', ng-model='ngUi.switchToNewNetwork')
							//- 				label.onoffswitch-label(for='switchToNew')
							//- 					.onoffswitch-inner
							//- 					.onoffswitch-switch

							.row.border-section.title-style
								.col-xs-12
									h7 Network Name
								.col-xs-12
									input.form-control( type='text', ng-model='ngmodels.newNetworkName', ng-minlength="3")
							ul.list-unstyled
								li(ng-repeat="opt in attrNetwAlgo.options", ng-mouseenter='', ng-click="$event.stopPropagation()")
									div(ng-if='opt.title != "Attributes" && !opt.hidden')
										//boolean, radio, attr-select, select, scale, color, input, text-input
										.row.vert-align.border-section-lt(ng-if='opt.type != "color-p" && opt.type != "attr-select-mult"')
											div(ng-class="{'col-xs-9': (opt.type == 'bool'), 'col-xs-7': (opt.type != 'bool')}")
												h7(ng-if='opt.title!=""' uib-tooltip="{{opt.description}}" tooltip-placement="left" tooltip-append-to-body="true") {{opt.title}}
											div(ng-class="{'col-xs-3': (opt.type == 'bool'), 'col-xs-5': (opt.type != 'bool')}")
												settings-input(opt="opt", attrs="nodeAttrs" color-change="updateColors()" ng-model="runOptions[opt.key]")
										//Special Case - attr-select-mult
										.row.vert-align.border-section-lt(ng-if='opt.type == "attr-select-mult"' uib-tooltip="{{opt.description}}" tooltip-placement="left" tooltip-append-to-body="true")
											.col-xs-6
												h7(ng-if='opt.title!=""') {{opt.title}}
											.col-xs-6
												a.btn.btn-default(ng-click = "selectNodeAttribsModal('lg')") {{{true: runOptions.questions.length + ' Selected', false: 'Select Attributes'}[runOptions.questions.length>0]}}
										//Special Case - color pallete
										.row.vert-align.border-section-lt(ng-if='opt.type == "color-p"' uib-tooltip="{{opt.description}}" tooltip-placement="left" tooltip-append-to-body="true")
											.col-xs-12
												h7(ng-if='opt.title!=""') {{opt.title}}
										.row.vert-align.border-section-lt(ng-if='opt.type == "color-p"')
											.col-xs-12
												color-picker(colors='runOptions[opt.key]' editable='true' ng-if='opt.type == "color-p"')
		.row(ng-if="!nodeAttributes")
			.centerContainer.centerFlex
				div.centerPseudo.vert-align 
					i.fa.fa-spinner.fa-pulse.fa-2x
					span.size-h4 &nbsp;&nbsp;loading data..
	style.
		.centerContainer {
			border: 1px dotted #red;
			display: block;
			height: 100%;
			width: 100%;
		}

		.centerFlex {
			align-items: center;
			display: flex;
			justify-content: center;
		}

		.centerPseudo {
			display: inline-block;
			text-align: center;
		}
